name: Release

on:
  push:
    branches:
      - main
env:
  CI: true
concurrency:
  group: workflow-${{ github.workflow }}
  cancel-in-progress: false
permissions:
  contents: read

jobs:
  build:
    uses: ./.github/workflows/ci.yml
    permissions:
      contents: read
  deploy:
    # prevents this action from running on forks
    if: github.repository == 'kosolabs/kosui'
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    needs: build
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
  release:
    # prevents this action from running on forks
    if: github.repository == 'kosolabs/kosui'
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
      id-token: write # Required for OIDC
    needs: build
    environment:
      name: kosuinpm
      url: https://www.npmjs.com/package/kosui
    steps:
      - name: Checkout code repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup pnpm and node
        uses: ./.github/actions/setup-pnpm
      - name: Create and publish versions
        id: changesets
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba #v1.5.3
        with:
          commit: "chore: update versions"
          title: "chore: update versions"
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b #v2.1.1
        if: steps.changesets.outputs.hasChangesets == 'true' && steps.changesets.outputs.published == 'false'
        id: releaser-token
        with:
          app-id: ${{ secrets.RELEASER_APP_ID }}
          private-key: ${{ secrets.RELEASER_PRIVATE_KEY }}
      - name: Enable auto-merge for Changesets PRs
        if: steps.changesets.outputs.hasChangesets == 'true' && steps.changesets.outputs.published == 'false'
        run: gh pr --repo "${{ github.repository }}" merge --auto --squash "${{ steps.changesets.outputs.pullRequestNumber }}"
        env:
          GH_TOKEN: ${{ steps.releaser-token.outputs.token }}
